default_install_hook_types:
-   pre-commit
-   post-checkout
-   post-merge
-   post-rewrite
default_language_version:
  python: python3.12
default_stages: [pre-commit, pre-merge-commit, pre-push, manual]

repos:
-   repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.3
    hooks:
    -   id: ruff-check
        args: [--fix]
    -   id: ruff-format
        types_or: [python]

      # Add pre-commit-update to keep pre-commit hooks updated
-   repo: https://gitlab.com/vojko.pribudic.foss/pre-commit-update
    rev: v0.8.0
    hooks:
    -   id: pre-commit-update

      # Poetry core hooks
-   repo: https://github.com/python-poetry/poetry
    rev: 2.2.1
    hooks:
    -   id: poetry-check
        args: ["--strict", "--lock"]     # Strict checking and verify lock file exists
        files: ^(pyproject.toml|poetry.lock)$
    -   id: poetry-lock
        files: ^(pyproject.toml|poetry.lock)$

      # Separate repo for the export plugin
-   repo: https://github.com/python-poetry/poetry-plugin-export
    rev: 1.9.0
    hooks:
    -   id: poetry-export
        args: ["-f", "requirements.txt", "-o", "requirements.txt", "--without-hashes"]
        files: ^(pyproject.toml|poetry.lock)$

      # This run after branch checkouts and merges, which do not operate on files, so `always_run: true` is required for them to trigger
      # This trades off some efficiency, as `poetry sync` will run even when `pyproject.toml` or `poetry.lock` did not change
-   repo: local
    hooks:
    -   id: poetry-sync
        name: Poetry Sync
        description: Synchronize the environment with locked packages
        entry: poetry sync
        language: system
        pass_filenames: false
        always_run: true
        stages: [post-checkout, post-merge]
        args: ["--all-groups"]
